name: Release Sign SDK

on:
  #  workflow_dispatch:
  push:
    branches:
      - feature/release_workflow
#      - master

concurrency:
  # Support push/pr as event types with different behaviors each:
  # 1. push: queue up builds by branch
  # 2. pr: only allow one run per PR
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref_name }}
  # If there is already a workflow running for the same pull request, cancel it
  # For non-PR triggers queue up builds
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Sign Unit tests
        env:
          WC_CLOUD_PROJECT_ID: ${{ secrets.WC_CLOUD_PROJECT_ID }}
        run: ./gradlew :sign:sdk:testDebugUnitTest

  #Build and send the sdk artefacts

  build-wallet:
    needs: [ unit-tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate Wallet APK
        run: ./gradlew :sign:wallet:assembleDebug

      - name: Upload Artifact
          uses: actions/upload-artifact@v2
          with:
            name: wallet
            path: sign/wallet/build/outputs/apk/debug/wallet-debug.apk

  build-dapp:
    needs: [ unit-tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate Dapp APK
        run: ./gradlew :sign:dapp:assembleDebug

      - name: Upload Artifact
          uses: actions/upload-artifact@v2
          with:
            name: dapp
            path: sign/dapp/build/outputs/apk/debug/dapp-debug.apk

  deploy-wallet:
    needs: [ build-wallet ]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
          uses: actions/download-artifact@v2
          with:
            name: wallet

      - name: Upload Wallet to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_APP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: WalletConnect
          file: wallet-debug.apk

  deploy-dapp:
    needs: [ build-dapp ]
      runs-on: ubuntu-latest
      steps:
        - name: Download artifact
            uses: actions/download-artifact@v2
            with:
              name: dapp

        - name: Upload Dapp to Firebase App Distribution
          uses: wzieba/Firebase-Distribution-Github-Action@v1
          with:
            appId: ${{secrets.FIREBASE_APP_ID}}
            token: ${{secrets.FIREBASE_TOKEN}}
            groups: WalletConnect
            file: dapp-debug.apk