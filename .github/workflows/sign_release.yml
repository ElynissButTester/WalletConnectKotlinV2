name: Release Sign SDK

on:
  push:
    branches:
      - feature/release_workflow
    #      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.number || github.ref_name }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  unit-tests:
    if: 0 > secrets.SIGN_SDK_VERSION_CODE
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Sign Unit tests
        env:
          WC_CLOUD_PROJECT_ID: ${{ secrets.WC_CLOUD_PROJECT_ID }}
        run: ./gradlew :sign:sdk:testDebugUnitTest

  build-and-publish-sdk:
    needs: [ unit-tests ]
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Publish to MavenCentral
        run: ./gradlew :sign:sdk:publishReleasePublicationToSonatypeRepository #--max-workers 1 closeAndReleaseSonatypeStagingRepository
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_PASSWORD }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}

  build-wallet:
    needs: [ build-and-publish-sdk ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate Wallet APK
        run: ./gradlew :sign:wallet:assembleDebug
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: wallet
          path: sign/wallet/build/outputs/apk/debug/wallet-debug.apk

  build-dapp:
    needs: [ build-and-publish-sdk ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Generate Dapp APK
        run: ./gradlew :sign:dapp:assembleDebug
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: dapp
          path: sign/dapp/build/outputs/apk/debug/dapp-debug.apk

  deploy-wallet:
    needs: [ build-wallet ]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: wallet
      - name: Upload Wallet to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_WALLET_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: WalletConnect
          file: wallet-debug.apk

  deploy-dapp:
    needs: [ build-dapp ]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: dapp
      - name: Upload Dapp to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_DAPP_ID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: WalletConnect
          file: dapp-debug.apk